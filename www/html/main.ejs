<% include partials/head %>
<%- include("partials/header", { user: !!locals.user ? user : undefined }) %>

<style>
  .authorentry, .modentry {
    background-color: black;
    font-size: 20px;
    color: white;
    width: 310px;
    height: auto;
    margin: 6.9px;
    bottom: 0px;
    box-sizing: border-box;
    left: 0px;
    letter-spacing: 0.3px;
    overflow-wrap: break-word;
    position: relative;
    right: 0px;
    text-align: left;
    text-decoration: none solid rgb(0, 0, 0);
    text-rendering: optimizelegibility;
    text-size-adjust: 100%;
    top: 0px;
    width: 224px;
    column-rule-color: rgb(0, 0, 0);
    perspective-origin: 112px 200.188px;
    transform-origin: 112px 200.188px;
    caret-color: rgb(0, 0, 0);
    background: #252525 none repeat scroll 0% 0%/auto padding-box border-box;
    border: 0px none rgb(0, 0, 0);
    font-size: 15px;
    list-style: none outside none;
    outline: rgb(255, 255, 255) none 0px;
    min-height: 220px;
  }

  .authorwrapper img {
    width: 50px;
    height: 50px;
    border-radius: 50%;
    vertical-align: middle;
  }

  .modentry img {
    width: 100%;
    min-height: 126px;
    max-height: 126px;
    vertical-align: middle;
    object-fit: contain;
  }

  .votebutton {
    border-radius: 20%;
    border: none;
    background-color: rgb(60, 64, 67);
    cursor: pointer;
    float: right;
    right: 5px;
    top: 15px;
    position: absolute;
    color: white;
    width: 58px;
  }
  
  .votebutton:focus, .votebutton:active {
    outline: none;
  }

  .votebutton[disabled] {
    background-color: rgb(30, 32, 34);
    color: darkgray;
    cursor: no-drop;
  }

  .authorentry[disabled] {
    filter: opacity(50%);
  }
  
  .authorentry[disabled] > * {
    filter: blur(1px);
  }

  .unvote {
    background: green;
  }

  .authorname, .modname {
    vertical-align: middle;
  }

  .authorwrapper, .modwrapper {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    padding: 0;
  }

  .hidden {
    display: none !important;
  }
</style>

<script>
  var votes = [
    <% for (var vote of votes) { %>
      "<%= vote %>",
    <% } %>
  ];

  function vote(author) {
    $.ajax({
      url: "/vote?id=" + author,
      statusCode: {
        401: () => {
          console.log("Not logged in!");
          alert("Not logged in!");
        },
        400: () => {
          console.log("Invalid author!");
          alert("Invalid author!");
        },
        404: () => {
          console.log("Invalid author!");
          alert("Invalid author!");
        },
        409: () => {
          console.log("Author already voted!");
          alert("Author already voted!");
        },
        406: () => {
          console.log("Too many votes!");
          alert("Too many votes!");
        },
        418: () => {
          document.cookie = "rolled=true; expires=Fri, 31 Dec 9999 23:59:59 GMT"
          alert("Bruh, did you really try to vote for yourself?");
          window.location = "https://www.youtube.com/watch?v=dQw4w9WgXcQ";
        },
        200: () => {
          $(".votefor" + author).css("display", "none");
          $(".unvotefor" + author).css("display", "inherit");
          votes.push(author);
        },
        500: () => {
          console.log("Server error");
          alert("Server error");
        }
      },
    });
  }

  function unvote(author) {
    $.ajax({
      url: "/unvote?id=" + author,
      statusCode: {
        401: () => {
          console.log("Not logged in!");
          alert("Not logged in!");
        },
        400: () => {
          console.log("Invalid author!");
          alert("Invalid author!");
        },
        404: () => {
          console.log("Invalid author!");
          alert("Invalid author!");
        },
        409: () => {
          console.log("Author not voted!");
          alert("Author not voted!");
        },
        200: () => {
          $(".unvotefor" + author).css("display", "none");
          $(".votefor" + author).css("display", "inherit");
          votes = votes.filter(x => x != author);
        },
        500: () => {
          console.log("Server error");
          alert("Server error");
        }
      },
    });
  }

  function refreshButtons() {
    if (votes.length == 3) { 
      $(".vote").attr("disabled", true);
      $(".authorentry").attr("disabled", true);
      for (var vote of votes) {
        $(".authorentry" + vote).attr("disabled", false);
      }
    }
    else { 
      $(".vote").attr("disabled", false);
      $(".authorentry").attr("disabled", false);      
    }

    if (document.cookie.match(/^(.*;)?\s*rolled\s*=\s*[^;]+(.*)?$/)) { 
      $(".votefor<%= user.id %>").attr("disabled", true);
    }
  }

  $.when($.ready).then(() => {
    setInterval(refreshButtons, 100);

    if (window.performance && window.performance.navigation.type == window.performance.navigation.TYPE_BACK_FORWARD) {
      window.location.reload();
    }

    if (window.location.hash == "#mods") {
      $(".modwrapper").removeClass("hidden");
      $(".header-mods").addClass("active");
    } else {
      $(".authorwrapper").removeClass("hidden");
      $(".header-authors").addClass("active");
    }
  });
</script>

<ul class="authorwrapper hidden">
  <% for (var author of authors) { %>
    <div class="authorentry authorentry<%= author.id %> authorentry<%= author.discordids.split(',').join(' votefor') %>">
      <img src="<%= author.icon %>">
      <a class="authorname notalink"><%= author.name %></a>
      <button class="votebutton vote votefor<%= author.id %> votefor<%= author.discordids.split(',').join(' votefor') %>" onclick="vote('<%= author.id %>')" <% if (votes.includes(author.id)) { %> style="display:none;"<% } %>>VOTE</button>
      <button class="votebutton unvote unvotefor<%= author.id %> unvotefor<%= author.discordids.split(',').join(' unvotefor') %>" onclick="unvote('<%= author.id %>')" <% if (!votes.includes(author.id)) { %> style="display:none;"<% } %>>VOTED</button>
      <br><br>
      <ul>
        <% for (var mod of mods) { %>
          <% if (mod.authors.includes(author.id)) { %>
            <li><a href="https://nexusmods.com/<%= mod.domain %>/mods/<%= mod.nexusid %>"><%= mod.name %></a></li>
          <% } %>
        <% } %>
      </ul>
      <br>
    </div>
  <% } %>
</ul>

<ul class="modwrapper hidden">
  <% for (var mod of mods) { %>
    <div class="modentry">
      <img src="<%= mod.image %>">
      <a class="modname notalink"><%= mod.name %></a>
    </div>
  <% } %>
</ul>

<form name="dirty_check">
  <input type="hidden" id="page_is_dirty" name="page_is_dirty" value="0" />
</form>